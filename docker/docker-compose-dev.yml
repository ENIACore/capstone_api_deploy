version: '3'

services:

  capstone_db:
    image: postgres:latest
    container_name: capstone_db_dev
    restart: always
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - capstone_be
    environment:
      - POSTGRES_DB=Capstone
      - POSTGRES_USER=postgresql
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      timeout: 5s

  capstone_api:
    build: ../api/
    container_name: capstone_api_dev
    restart: always
    volumes:
      - api_static:/static
      - api_media:/media
    networks:
      - capstone_fe
      - capstone_be
    depends_on:
      capstone_db:
        condition: service_healthy

  # We will need to make a FE container here

  capstone_proxy:
    image: nginx:latest
    container_name: capstone_proxy_dev
    restart: always
    volumes:
      - ../nginx/dev_templates:/etc/nginx/templates
      - ../nginx/dev_conf/nginx.conf:/etc/nginx/nginx.conf
      - api_static:/etc/static
      - api_media:/etc/media
    networks:
      - capstone_fe
    ports:
      - 80:80
      - 443:443
    depends_on:
      - capstone_api

networks:    
  capstone_fe:
    driver: bridge
  capstone_be:
    driver: bridge

volumes:
  db_data:
  api_static:
  api_media:
